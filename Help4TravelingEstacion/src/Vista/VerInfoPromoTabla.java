/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Logica.DtPromocion;
import Logica.DtServicio;
import Logica.Fabrica;
import Logica.IControladorServicio;
import java.util.Iterator;
import java.util.List;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tecnoinf
 */
public class VerInfoPromoTabla extends javax.swing.JInternalFrame {

    private IControladorServicio IControlador;
    private List<DtPromocion> listaPromos;
    private List<DtServicio> listaServicios;
    String[] colPromocion = {"Nombre", "Proveedor", "Descuento", "Total"};
    String[] colServicios = {"Nombre", "Precio", "Origen", "Destino"};
    private DefaultTableModel modeloPromociones;
    private DefaultTableModel modeloServicios;
    private DefaultTableCellRenderer centerRenderer;
    private DefaultTableCellRenderer rightRenderer;

    /**
     * Creates new form verInfoReserva
     */
    private void refrescarPromos() {
        this.listaPromos = this.IControlador.listarPromociones();
        Iterator<DtPromocion> i = this.listaPromos.iterator();
        modeloPromociones.getDataVector().removeAllElements();

        while (i.hasNext()) {
            DtPromocion p = i.next();
            Object[] fila = {
                p.getNombre(),
                p.getProveedor(),
                p.getPrecio(),
                p.getDescuento()
            };
            modeloPromociones.addRow(fila);
        }
        Usuarios.setModel(modeloPromociones);
        Usuarios.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        Usuarios.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
    }

    private void refrescarServicios() {
        Integer index = Usuarios.getSelectedRow();
        if (index != -1) {
            DtPromocion u = listaPromos.get(index);
            this.listaServicios = this.IControlador.listarServiciosPromocion(u);
            modeloServicios.setRowCount(0);

            if (listaServicios != null) {
                Iterator<DtServicio> it = this.listaServicios.iterator();

                while (it.hasNext()) {
                    DtServicio s = it.next();
                    Object[] fila = {
                        s.getNombre(),
                        s.getPrecio(),
                        s.getNomCiuOrigen(),
                        s.getNomCiuDestino()
                    };
                    modeloServicios.addRow(fila);
                }
            }

            Servicios.setModel(modeloServicios);
            Servicios.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        }
    }

    public VerInfoPromoTabla() {
        this.centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        this.rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);

        this.modeloServicios = new DefaultTableModel(colServicios, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.modeloPromociones = new DefaultTableModel(colPromocion, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        initComponents();

        Fabrica fabrica = Fabrica.getInstance();
        this.IControlador = fabrica.getIControladorServicio();

        //fabrica.getIControladorReserva().setReservasDB();
        //fabrica.getIControladorReserva().setItemsDB();
        refrescarPromos();
        if (Usuarios.getRowCount() > 0) {
            Usuarios.setRowSelectionInterval(0, 0);
            refrescarServicios();
        } else {
            Servicios.setModel(modeloServicios);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Servicios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Usuarios = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        Actualizar = new javax.swing.JButton();
        Aceptar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ver Info Promoción");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/info-icon.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(440, 240));
        setPreferredSize(new java.awt.Dimension(600, 336));

        Servicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Precio", "Origen", "Destino"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Servicios.setColumnSelectionAllowed(true);
        Servicios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Servicios);
        Servicios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("Servicios correspondientes al proveedor seleccionado:");

        Usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Proveedor", "Descuento", "Total"
            }
        ));
        Usuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Usuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Usuarios.getTableHeader().setReorderingAllowed(false);
        Usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsuariosMouseClicked(evt);
            }
        });
        Usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UsuariosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Usuarios);

        jLabel2.setText("Seleccione la promoción para la cual desea ver mas información:");

        Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/refresh-icon.png"))); // NOI18N
        Actualizar.setText("Actualizar");
        Actualizar.setFocusable(false);
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/check-icon.png"))); // NOI18N
        Aceptar.setText("Aceptar");
        Aceptar.setFocusable(false);
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Actualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Aceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Actualizar)
                    .addComponent(Aceptar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsuariosMouseClicked
        if (Usuarios.getSelectedRowCount() > 0) {
            refrescarServicios();
        }
    }//GEN-LAST:event_UsuariosMouseClicked

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        int fila = 0;
        if (Usuarios.getSelectedRowCount() > 0) {
            fila = Usuarios.getSelectedRow();
        }
        //this.IControlador.setReservasDB();
        //this.IControlador.setItemsDB();
        refrescarPromos();
        modeloServicios.getDataVector().removeAllElements();
        Servicios.setModel(modeloServicios);
        if (Usuarios.getRowCount() > fila) {
            Usuarios.setRowSelectionInterval(fila, fila);
        }
    }//GEN-LAST:event_ActualizarActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        this.dispose();
    }//GEN-LAST:event_AceptarActionPerformed

    private void UsuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsuariosKeyReleased
        if (Usuarios.getSelectedRowCount() > 0) {
            refrescarServicios();
        }
    }//GEN-LAST:event_UsuariosKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Actualizar;
    private javax.swing.JTable Servicios;
    private javax.swing.JTable Usuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
