/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Logica.DtItemReserva;
import Logica.DtReserva;
import Logica.Fabrica;
import Logica.IControladorReserva;
import java.util.Iterator;
import java.util.List;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tecnoinf
 */
public class VerInfoReservaTabla extends javax.swing.JInternalFrame {

    private IControladorReserva IControlador;
    private List<DtReserva> listaReservas;
    private List<DtItemReserva> listaItems;
    //private List<DtItems> listaItems;
    String[] colReservas = {"Número", "Fecha", "Estado", "Total", "Cliente"};
    String[] colItems = {"Nombre", "Cantidad", "Inicio", "Fin"};
    private DefaultTableModel tableModelRes;
    private DefaultTableModel tableModelItems;
    private DefaultTableCellRenderer centerRenderer;
    private DefaultTableCellRenderer rightRenderer;

    /**
     * Creates new form VerInfoReservaTabla
     */
    private void refrescarReservas() {
        this.listaReservas = this.IControlador.listarReservas();
        Iterator<DtReserva> i = this.listaReservas.iterator();
        tableModelRes.getDataVector().removeAllElements();

        while (i.hasNext()) {
            DtReserva res = i.next();
            Object[] fila = {res.getId(),
                res.getCreada().getFecha("-"),
                res.getEstado(),
                res.getTotal(),
                res.getCliente()
            };
            tableModelRes.addRow(fila);
        }
        jTableRes.setModel(tableModelRes);
        jTableRes.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        jTableRes.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        jTableRes.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        jTableRes.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
    }

    private void refrescarItems() {
        Integer index = jTableRes.getSelectedRow();
        if (index != -1) {
            DtReserva res = listaReservas.get(index);
            Integer reserva = (int) (long) listaReservas.get(index).getId();
            this.listaItems = this.IControlador.listarItems(reserva);
            tableModelItems.setRowCount(0);
            
            if (listaItems != null) {
                Iterator<DtItemReserva> it = this.listaItems.iterator();

                while (it.hasNext()) {
                    DtItemReserva item = it.next();
                    Object[] fila = {//item.getId(),
                        item.getOferta().getNombre(),
                        item.getCantidad(),
                        item.getInicio().getFecha("-"),
                        item.getFin().getFecha("-"),};

                    tableModelItems.addRow(fila);
                }
            }
            
            jTableItems.setModel(tableModelItems);
            jTableItems.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            jTableItems.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            jTableItems.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
            jTableItems.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        }
    }

    public VerInfoReservaTabla() {
        this.centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        this.rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);

        this.tableModelItems = new DefaultTableModel(colItems, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.tableModelRes = new DefaultTableModel(colReservas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        initComponents();

        Fabrica fabrica = Fabrica.getInstance();
        this.IControlador = fabrica.getIControladorReserva();

        fabrica.getIControladorReserva().setReservasDB();
        fabrica.getIControladorReserva().setItemsDB();
        refrescarReservas();
        if (jTableRes.getRowCount() > 0) {
            jTableRes.setRowSelectionInterval(0, 0);
            refrescarItems();
        } else {
            jTableItems.setModel(tableModelItems);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableItems = new javax.swing.JTable();
        jLabelItems = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableRes = new javax.swing.JTable();
        jLabelRes = new javax.swing.JLabel();
        jButtonActual = new javax.swing.JButton();
        jButtonCerrar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ver Info Reserva");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/info-icon.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(440, 240));
        setPreferredSize(new java.awt.Dimension(600, 336));

        jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Cantidad", "Inicio", "Fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableItems.setColumnSelectionAllowed(true);
        jTableItems.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableItems);
        jTableItems.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabelItems.setText("Servicios y promociones  correspondientes a la reserva seleccionada:");

        jTableRes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Número", "Fecha", "Estado", "Total", "Cliente"
            }
        ));
        jTableRes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableRes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableRes.getTableHeader().setReorderingAllowed(false);
        jTableRes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableResMouseClicked(evt);
            }
        });
        jTableRes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableResKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableRes);

        jLabelRes.setText("Seleccione la reserva para la cual desea ver mas información:");

        jButtonActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/refresh-icon.png"))); // NOI18N
        jButtonActual.setText("Actualizar");
        jButtonActual.setFocusable(false);
        jButtonActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualActionPerformed(evt);
            }
        });

        jButtonCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/check-icon.png"))); // NOI18N
        jButtonCerrar.setText("Aceptar");
        jButtonCerrar.setFocusable(false);
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRes)
                            .addComponent(jLabelItems))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonActual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelItems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActual)
                    .addComponent(jButtonCerrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableResMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableResMouseClicked
        if (jTableRes.getSelectedRowCount() != -1) {
            refrescarItems();
        }
    }//GEN-LAST:event_jTableResMouseClicked

    private void jButtonActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualActionPerformed
        int fila = 0;
        if (jTableRes.getSelectedRowCount() > 0) {
            fila = jTableRes.getSelectedRow();
        }
        this.IControlador.setReservasDB();
        this.IControlador.setItemsDB();
        refrescarReservas();
        tableModelItems.getDataVector().removeAllElements();
        jTableItems.setModel(tableModelItems);
        if (jTableRes.getRowCount() > fila) {
            jTableRes.setRowSelectionInterval(fila, fila);
        }
    }//GEN-LAST:event_jButtonActualActionPerformed

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed
    private void jTableResKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableResKeyReleased
        if (jTableRes.getSelectedRowCount() > 0) {
            refrescarItems();
        }
    }//GEN-LAST:event_jTableResKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActual;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JLabel jLabelItems;
    private javax.swing.JLabel jLabelRes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableItems;
    private javax.swing.JTable jTableRes;
    // End of variables declaration//GEN-END:variables
}
